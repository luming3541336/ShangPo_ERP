<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoardText.Text" xml:space="preserve">
    <value>更新公告:
Ver 2.0.2.1 Update 2020/03/27
    1.修正進貨/出貨訂單取消刪除依然會刪除的問題
    2. 工作進度修正案下Tab時的順序
Ver 2.0.2.0 Update 2020/03/23
    1. 新增產品(估價用)設定(測試)
    2. 視窗修正
Ver.2.0.1.12 Update 2020/03/05
    1.新增五金配件設定
    2.視窗修正
Ver.2.0.1.10 Update 2020/02/25
    表格修正
Ver.2.0.1.9 Update 2020/02/20
    鑰匙單複製功能更新: 
             1.現在可以複製整行資料或者可自行選取單攔資料進行複製
             2. 提供快速鍵複製&lt;Ctrl+C&gt;及貼上&lt;Ctrl+V&gt;功能
    鑰匙單交回人員及日期現在已不受任何限制，隨時可以進行設定及修改
Ver.2.0.1.7 Update 2020/02/18
    新增鑰匙單複製功能，現在在需要的欄位點選右鍵即可使用此功能
Ver.2.0.1.6 Update 2020/02/13
    更新鑰匙單:新增交回人員及時間，結案時間更改為手動輸入
Ver.2.0.1.3 Update 2020/02/04
    修正進出貨管理權限問題
    修正鑰匙單無法刪除的問題
Ver.2.0.1.1 Update 2020/01/10
  修正案件搜尋查無資料時，明細部分會出現其他筆資料的明細。
  進出貨管理最佳化
 Ver.2.0.1.0 Update 2020/01/03
   新增鑰匙/五金 簽收單功能(目前僅有鑰匙可用)
 Ver.2.0.0.0 Update 2019/11/23
    全新的登入畫面及主頁
        主頁選單改成條列式選單，更直覺的操作體驗。
        新增管理級提醒功能，可讓管理人員在第一時間確認需查核內容(目前僅提供維修單審核)
    進出貨管理
         現在可自由調整案件及細節的長度調整，能夠依照個人需求調整顯示長度。
         新增維修單功能
             維修單會有5種狀態，每個狀態將影響該筆維修單的操作
                 1.尚未建檔 - 僅提供存檔功能。
                 2.尚未提交 - 提供存檔及提交功能，提交後將鎖定維修單直到管理人員確認後才可執行其他功能
                 3.覆核確認中 - 管理人員可修改資料(需存檔)，列印維修單及覆核
                 4.已完成派單，等待執行 - 一般人員可以列印維修單，並且上傳及回覆工程人員所簽收之文件及
                                                               紀錄維修狀況
                 5.維修完成 -鎖定所有功能
 Ver.1.6.1.0 Update:2019/08/01
    修正(Ver.:1.6.1.5 Update:2019/09/18):
        1.現在雙擊"工作明細"及"工程進度"時直接談出修正畫面
        2.優化"工作明細"及"工程進度"的時間欄位
    修正(Ver.:1.6.1.4 Update:2019/09/16):
           修正打印Bug
    修正(Ver.:1.6.1.3 Update:2019/09/12):
        1.優化工作進度及工作明細資料輸入，現在可以按下Entel切換欄位
        2.[測試]列印功能新增"未出貨"選項，現在可以列印出該筆案件尚未出貨的數據
    修正(Ver.:1.6.1.2 Update:2019/08/28):
        1.案件搜尋新增搜尋業務欄位
        2.案件搜尋欄位依照螢幕解析度做縮放調整
    修正(Ver.:1.6.1.1 Update:2019/08/14):
        新增轉軸，可在進出貨管理搜尋介面被遮蔽時使用。
    1.新增密碼變更功能，現在可讓使用者自行變更密碼。
    2.修改主頁面角色顯示畫面。
 Ver.1.6.0.0 Update:2019/05/29
    修正(Ver.:1.6.0.1 Update:2019/05/29):
         已修正報表部分資料無法匯出
    修正(Ver.:1.6.0.2 Update:2019/05/30):
         修正出貨總表之廠商名稱為縮寫
    1.新增更新公告功能，未來任何更新都會透過此功能告知大家。
    2.重新設計報表列印功能，現在提供以下條件可供塞選:
        -出貨總表(出貨日期、進貨日期及業務)
        -工程進度表(進貨日期)
       全新的報表列印提供更快速的建立報表(尤其大量資料時有感)
    3.重新設計資料讀取介面，介面更簡潔清爽
</value>
  </data>
</root>